######## Technologies
Backend:  Python(Django),Mysql/ Mongodb
Clientside:  Jquery library,Angular Js, Boostrap
Front end: HTML & CSS & JavaScript
################ General
screen mockups or Wireframe (paper/electronic) with real users 
Build with an MVC framework
Get emails (Mail Chimp/Campaign Monitor)
Get data (Google Analytics/Adwords/Twitter/Clickely)
Determine risk/interest/reward for the product

########## Wireframes and Mockup tasks
Wireframe/Prototype/Mockup (Free)
PowerPoint
https://balsamiq.com/ (Balsamiq -> for basic sketches)  
http://moqups.com  (only online)
https://mockplus.com  (not working on linux)
http://keynotopia.com/
-->CodeCharge : This is a visual code generator that provides a fast way to build database  web applications with support for almost all flavors of databases and scripting languages (PHP / Perl /ASP/Java). Have used this tool for developing complete database apps in hours - not days.

########## How session/authentication works


########## How http protocol works
HTTP protocol works
how web servers are implemented
throughput, requests/second, I/O contention, queues, async background jobs
HTML5,CSS3, Javascript frameworks (Jquery,Ember,Angular js)
RESTful API design
Security(XSS,CSRF,Injection)

########## How Https works
To prepare a web server to accept HTTPS connection
    Administrator creates public key certificate for web server
    The certificate must be signed by trusted authority  (authority certifies that the certificate holder is the operator of web site)
    web browser software comes pre installed certificate authorities (go daddy, symantec, comodo etc). They can verify certificates signed by these authorities
    browser sends certificate serial number to certificate authority and authority respons to browser if certificate is valid or not        
    
    SSL handshake happens between client and browser

Webserver gets a certificate from 


########### Django commands
python manage shell
--> Applying db changes
    python manage.py makemigrations users
    python manage.py migrate

--> python create app
    python manage.py startapp post
    python manage.py startapp media
        


############ Django tutorial
HTTP is stateless
HTTPResponse for small response like ajax or so
HTTPResponseRedirect to redirect to a page after successful processing of POST, this doesn't render templates
render, render_to_string, render_to_response (all similar) process a template and return that as http response



############# Mongodb ###########################
Mongodb -> No sql database (no schema)
PyMongo -> Python driver to access mongodb
Mongoengine -> a wrapper to Mongodb for ORM support
Django-Mangoengine -> Django inbuilt backend/driver to access Mongodb
We can use MongoDB in 2 ways with Django either using Mongodb/MongoEngine or Django inbuilt one Django-MangoENgine

--> Accessing Mongodb using shell
$mongo  

--> Accessing Mongodb using GUI

--> installation

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
echo "deb http://repo.mongodb.org/apt/ubuntu "$(lsb_release -sc)"/mongodb-org/3.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
service mongod status

To install specific version
sudo apt-get install -y mongodb-org=3.2.6 mongodb-org-server=3.2.6 mongodb-org-shell=3.2.6 mongodb-org-mongos=3.2.6 mongodb-org-tools   =3.2.6

sudo pip install pymongo
sudo pip install -U mongoengine  # document to Object (orm) mappings

---> To install Django-Mongodb engine ## This may erase existing Django installation. So becareful.
pip install git+https://github.com/django-nonrel/django@nonrel-1.5

